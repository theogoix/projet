type token =
    WHERE
  | UIDENT of string
  | TRUE
  | THEN
  | STRING of string
  | SEMICOL
  | PLUS
  | OR
  | OPAR
  | OF
  | OBRAC
  | NEQ
  | MUL
  | MODULE
  | MINUS
  | LT
  | LIDENT of string
  | LET
  | LE
  | INT of int
  | INSTANCE
  | IN
  | IMPORT
  | IF
  | GT
  | GE
  | FORALL
  | FALSE
  | EQUAL
  | EOF
  | ELSE
  | EFFECT_DOT_CONSOLE
  | DOUBLEEQ
  | DOUBLECOL
  | DOUBLEARROW
  | DOT
  | DO
  | DIV
  | DATA
  | CPAR
  | CONC
  | COMMA
  | CLASS
  | CBRAC
  | CASE
  | BAR
  | ARROW
  | AND
val menhir_begin_marker : int
val xv_typeargs_2 : unit list * Ast.tpe list * Ast.tpe
val xv_typeargs : unit list * Ast.tpe list * Ast.tpe
val xv_tdecl : Ast.decl
val xv_separated_nonempty_list_SEMICOL_tdecl_ : Ast.decl list
val xv_separated_nonempty_list_SEMICOL_expr_ : Ast.expr list
val xv_separated_nonempty_list_SEMICOL_defn_ : Ast.decl list
val xv_separated_nonempty_list_SEMICOL_decl_ : Ast.decl list
val xv_separated_nonempty_list_SEMICOL_branch_ :
  (Ast.pattern * Ast.expr) list
val xv_separated_nonempty_list_SEMICOL_binding_ : Ast.bind list
val xv_separated_nonempty_list_COMMA_ntype_ : unit list
val xv_separated_nonempty_list_BAR_consdecl_ : unit list
val xv_separated_list_SEMICOL_tdecl_ : Ast.decl list
val xv_separated_list_SEMICOL_defn_ : Ast.decl list
val xv_separated_list_SEMICOL_decl_ : Ast.decl list
val xv_pattern : Ast.pattern
val xv_patarg : Ast.pattern
val xv_ntype : unit
val xv_nonempty_list_patarg_ : Ast.pattern list
val xv_nonempty_list_atype_ : Ast.tpe list
val xv_nonempty_list_atom_ : Ast.expr list
val xv_nonempty_list_LIDENT_ : string list
val xv_loption_separated_nonempty_list_SEMICOL_tdecl__ : Ast.decl list
val xv_loption_separated_nonempty_list_SEMICOL_defn__ : Ast.decl list
val xv_loption_separated_nonempty_list_SEMICOL_decl__ : Ast.decl list
val xv_list_patarg_ : Ast.pattern list
val xv_list_atype_ : Ast.tpe list
val xv_list_LIDENT_ : string list
val xv_instance : unit
val xv_imports : unit
val xv_forall : string list
val xv_file : Ast.decl list
val xv_expr : Ast.expr
val xv_defn : Ast.decl
val xv_decl : Ast.decl
val xv_constant : Ast.constant
val xv_consdecl : unit
val xv_btype : Ast.tpe
val xv_branch : Ast.pattern * Ast.expr
val xv_binop : Ast.binop
val xv_binding : Ast.bind
val xv_atype : Ast.tpe
val xv_atom : Ast.expr
val menhir_end_marker : int
